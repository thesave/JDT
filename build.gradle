group 'jsdt'

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'antlr'
apply plugin: 'application'

def libDir = file( "lib" )

configurations {
    jsdt {
        extendsFrom implementation
    }
}

dependencies {
    antlr "org.antlr:antlr4:4.9.2"
    implementation 'com.github.javaparser:javaparser-core:3.22.1'
    implementation 'info.picocli:picocli:4.6.1'
    implementation fileTree( dir: libDir, include: '*.jar' )
}


import org.apache.tools.ant.filters.ReplaceTokens

sourceSets {
    implementation {
        java.srcDir 'src/main/java'
        antlr.srcDir 'src/main/antlr'
    }
}

generateGrammarSource {
    description "Compilation of the Antlr jsdt.grammar to Java Sources"
    outputDirectory file('src/main/java/jsdt/grammar')
    arguments += ['-package', 'jsdt.grammar', "-visitor"]
}

def jarOutputFolder = "dist"

version "0.2"

task setVersion {
    File file = projectDir.toPath().resolve("src/main/resources/project.properties" ).toFile();
    if( ! file.exists() ){
        file.createNewFile()
    }
    file.write "version=" + version
}
compileJava.dependsOn( setVersion )

jar {
    destinationDirectory = file( jarOutputFolder )
    manifest.attributes 'Main-Class': 'jsdt.JSDT'
    setDuplicatesStrategy( DuplicatesStrategy.WARN )
    from {
        configurations.jsdt.collect { it.isDirectory() ? it : zipTree(it) }
    }
}